#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Habraken_SLE
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbLabelEditor")]
	public partial class HLE_LinqtoSQLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_barcode(tbl_barcode instance);
    partial void Updatetbl_barcode(tbl_barcode instance);
    partial void Deletetbl_barcode(tbl_barcode instance);
    partial void Inserttbl_User(tbl_User instance);
    partial void Updatetbl_User(tbl_User instance);
    partial void Deletetbl_User(tbl_User instance);
    partial void Inserttbl_box(tbl_box instance);
    partial void Updatetbl_box(tbl_box instance);
    partial void Deletetbl_box(tbl_box instance);
    partial void Inserttbl_infoBarcode(tbl_infoBarcode instance);
    partial void Updatetbl_infoBarcode(tbl_infoBarcode instance);
    partial void Deletetbl_infoBarcode(tbl_infoBarcode instance);
    partial void Inserttbl_InformationField(tbl_InformationField instance);
    partial void Updatetbl_InformationField(tbl_InformationField instance);
    partial void Deletetbl_InformationField(tbl_InformationField instance);
    partial void Inserttbl_infoTextbox(tbl_infoTextbox instance);
    partial void Updatetbl_infoTextbox(tbl_infoTextbox instance);
    partial void Deletetbl_infoTextbox(tbl_infoTextbox instance);
    partial void Inserttbl_label(tbl_label instance);
    partial void Updatetbl_label(tbl_label instance);
    partial void Deletetbl_label(tbl_label instance);
    partial void Inserttbl_line(tbl_line instance);
    partial void Updatetbl_line(tbl_line instance);
    partial void Deletetbl_line(tbl_line instance);
    partial void Inserttbl_textbox(tbl_textbox instance);
    partial void Updatetbl_textbox(tbl_textbox instance);
    partial void Deletetbl_textbox(tbl_textbox instance);
    #endregion
		
		public HLE_LinqtoSQLDataContext() : 
				base(global::Habraken_SLE.Properties.Settings.Default.dbLabelEditorConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HLE_LinqtoSQLDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HLE_LinqtoSQLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HLE_LinqtoSQLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HLE_LinqtoSQLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_barcode> tbl_barcodes
		{
			get
			{
				return this.GetTable<tbl_barcode>();
			}
		}
		
		public System.Data.Linq.Table<tbl_User> tbl_Users
		{
			get
			{
				return this.GetTable<tbl_User>();
			}
		}
		
		public System.Data.Linq.Table<tbl_box> tbl_boxes
		{
			get
			{
				return this.GetTable<tbl_box>();
			}
		}
		
		public System.Data.Linq.Table<tbl_infoBarcode> tbl_infoBarcodes
		{
			get
			{
				return this.GetTable<tbl_infoBarcode>();
			}
		}
		
		public System.Data.Linq.Table<tbl_InformationField> tbl_InformationFields
		{
			get
			{
				return this.GetTable<tbl_InformationField>();
			}
		}
		
		public System.Data.Linq.Table<tbl_infoTextbox> tbl_infoTextboxes
		{
			get
			{
				return this.GetTable<tbl_infoTextbox>();
			}
		}
		
		public System.Data.Linq.Table<tbl_label> tbl_labels
		{
			get
			{
				return this.GetTable<tbl_label>();
			}
		}
		
		public System.Data.Linq.Table<tbl_line> tbl_lines
		{
			get
			{
				return this.GetTable<tbl_line>();
			}
		}
		
		public System.Data.Linq.Table<tbl_textbox> tbl_textboxes
		{
			get
			{
				return this.GetTable<tbl_textbox>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_barcode")]
	public partial class tbl_barcode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _LabelID;
		
		private int _PosX;
		
		private int _PosY;
		
		private int _Height;
		
		private int _Width;
		
		private int _Thickness;
		
		private string _Ratio;
		
		private EntitySet<tbl_infoBarcode> _tbl_infoBarcodes;
		
		private EntityRef<tbl_label> _tbl_label;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLabelIDChanging(int value);
    partial void OnLabelIDChanged();
    partial void OnPosXChanging(int value);
    partial void OnPosXChanged();
    partial void OnPosYChanging(int value);
    partial void OnPosYChanged();
    partial void OnHeightChanging(int value);
    partial void OnHeightChanged();
    partial void OnWidthChanging(int value);
    partial void OnWidthChanged();
    partial void OnThicknessChanging(int value);
    partial void OnThicknessChanged();
    partial void OnRatioChanging(string value);
    partial void OnRatioChanged();
    #endregion
		
		public tbl_barcode()
		{
			this._tbl_infoBarcodes = new EntitySet<tbl_infoBarcode>(new Action<tbl_infoBarcode>(this.attach_tbl_infoBarcodes), new Action<tbl_infoBarcode>(this.detach_tbl_infoBarcodes));
			this._tbl_label = default(EntityRef<tbl_label>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelID", DbType="Int NOT NULL")]
		public int LabelID
		{
			get
			{
				return this._LabelID;
			}
			set
			{
				if ((this._LabelID != value))
				{
					if (this._tbl_label.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLabelIDChanging(value);
					this.SendPropertyChanging();
					this._LabelID = value;
					this.SendPropertyChanged("LabelID");
					this.OnLabelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PosX", DbType="Int NOT NULL")]
		public int PosX
		{
			get
			{
				return this._PosX;
			}
			set
			{
				if ((this._PosX != value))
				{
					this.OnPosXChanging(value);
					this.SendPropertyChanging();
					this._PosX = value;
					this.SendPropertyChanged("PosX");
					this.OnPosXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PosY", DbType="Int NOT NULL")]
		public int PosY
		{
			get
			{
				return this._PosY;
			}
			set
			{
				if ((this._PosY != value))
				{
					this.OnPosYChanging(value);
					this.SendPropertyChanging();
					this._PosY = value;
					this.SendPropertyChanged("PosY");
					this.OnPosYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int NOT NULL")]
		public int Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int NOT NULL")]
		public int Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thickness", DbType="Int NOT NULL")]
		public int Thickness
		{
			get
			{
				return this._Thickness;
			}
			set
			{
				if ((this._Thickness != value))
				{
					this.OnThicknessChanging(value);
					this.SendPropertyChanging();
					this._Thickness = value;
					this.SendPropertyChanged("Thickness");
					this.OnThicknessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ratio", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Ratio
		{
			get
			{
				return this._Ratio;
			}
			set
			{
				if ((this._Ratio != value))
				{
					this.OnRatioChanging(value);
					this.SendPropertyChanging();
					this._Ratio = value;
					this.SendPropertyChanged("Ratio");
					this.OnRatioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_barcode_tbl_infoBarcode", Storage="_tbl_infoBarcodes", ThisKey="Id", OtherKey="BarcodeID")]
		public EntitySet<tbl_infoBarcode> tbl_infoBarcodes
		{
			get
			{
				return this._tbl_infoBarcodes;
			}
			set
			{
				this._tbl_infoBarcodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_label_tbl_barcode", Storage="_tbl_label", ThisKey="LabelID", OtherKey="Id", IsForeignKey=true)]
		public tbl_label tbl_label
		{
			get
			{
				return this._tbl_label.Entity;
			}
			set
			{
				tbl_label previousValue = this._tbl_label.Entity;
				if (((previousValue != value) 
							|| (this._tbl_label.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_label.Entity = null;
						previousValue.tbl_barcodes.Remove(this);
					}
					this._tbl_label.Entity = value;
					if ((value != null))
					{
						value.tbl_barcodes.Add(this);
						this._LabelID = value.Id;
					}
					else
					{
						this._LabelID = default(int);
					}
					this.SendPropertyChanged("tbl_label");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_infoBarcodes(tbl_infoBarcode entity)
		{
			this.SendPropertyChanging();
			entity.tbl_barcode = this;
		}
		
		private void detach_tbl_infoBarcodes(tbl_infoBarcode entity)
		{
			this.SendPropertyChanging();
			entity.tbl_barcode = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Users")]
	public partial class tbl_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserName;
		
		private string _UserID;
		
		private string _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnUserProfileChanging(string value);
    partial void OnUserProfileChanged();
    #endregion
		
		public tbl_User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserProfile", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserProfile
		{
			get
			{
				return this._UserProfile;
			}
			set
			{
				if ((this._UserProfile != value))
				{
					this.OnUserProfileChanging(value);
					this.SendPropertyChanging();
					this._UserProfile = value;
					this.SendPropertyChanged("UserProfile");
					this.OnUserProfileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_boxes")]
	public partial class tbl_box : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _LabelID;
		
		private int _Thickness;
		
		private int _PosX;
		
		private int _PosY;
		
		private int _Heigth;
		
		private int _Width;
		
		private EntityRef<tbl_label> _tbl_label;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLabelIDChanging(int value);
    partial void OnLabelIDChanged();
    partial void OnThicknessChanging(int value);
    partial void OnThicknessChanged();
    partial void OnPosXChanging(int value);
    partial void OnPosXChanged();
    partial void OnPosYChanging(int value);
    partial void OnPosYChanged();
    partial void OnHeigthChanging(int value);
    partial void OnHeigthChanged();
    partial void OnWidthChanging(int value);
    partial void OnWidthChanged();
    #endregion
		
		public tbl_box()
		{
			this._tbl_label = default(EntityRef<tbl_label>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelID", DbType="Int NOT NULL")]
		public int LabelID
		{
			get
			{
				return this._LabelID;
			}
			set
			{
				if ((this._LabelID != value))
				{
					if (this._tbl_label.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLabelIDChanging(value);
					this.SendPropertyChanging();
					this._LabelID = value;
					this.SendPropertyChanged("LabelID");
					this.OnLabelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thickness", DbType="Int NOT NULL")]
		public int Thickness
		{
			get
			{
				return this._Thickness;
			}
			set
			{
				if ((this._Thickness != value))
				{
					this.OnThicknessChanging(value);
					this.SendPropertyChanging();
					this._Thickness = value;
					this.SendPropertyChanged("Thickness");
					this.OnThicknessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PosX", DbType="Int NOT NULL")]
		public int PosX
		{
			get
			{
				return this._PosX;
			}
			set
			{
				if ((this._PosX != value))
				{
					this.OnPosXChanging(value);
					this.SendPropertyChanging();
					this._PosX = value;
					this.SendPropertyChanged("PosX");
					this.OnPosXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PosY", DbType="Int NOT NULL")]
		public int PosY
		{
			get
			{
				return this._PosY;
			}
			set
			{
				if ((this._PosY != value))
				{
					this.OnPosYChanging(value);
					this.SendPropertyChanging();
					this._PosY = value;
					this.SendPropertyChanged("PosY");
					this.OnPosYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heigth", DbType="Int NOT NULL")]
		public int Heigth
		{
			get
			{
				return this._Heigth;
			}
			set
			{
				if ((this._Heigth != value))
				{
					this.OnHeigthChanging(value);
					this.SendPropertyChanging();
					this._Heigth = value;
					this.SendPropertyChanged("Heigth");
					this.OnHeigthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int NOT NULL")]
		public int Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_label_tbl_box", Storage="_tbl_label", ThisKey="LabelID", OtherKey="Id", IsForeignKey=true)]
		public tbl_label tbl_label
		{
			get
			{
				return this._tbl_label.Entity;
			}
			set
			{
				tbl_label previousValue = this._tbl_label.Entity;
				if (((previousValue != value) 
							|| (this._tbl_label.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_label.Entity = null;
						previousValue.tbl_boxes.Remove(this);
					}
					this._tbl_label.Entity = value;
					if ((value != null))
					{
						value.tbl_boxes.Add(this);
						this._LabelID = value.Id;
					}
					else
					{
						this._LabelID = default(int);
					}
					this.SendPropertyChanged("tbl_label");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_infoBarcode")]
	public partial class tbl_infoBarcode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _InformationID;
		
		private int _BarcodeID;
		
		private int _NumCharPos;
		
		private EntityRef<tbl_barcode> _tbl_barcode;
		
		private EntityRef<tbl_InformationField> _tbl_InformationField;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInformationIDChanging(int value);
    partial void OnInformationIDChanged();
    partial void OnBarcodeIDChanging(int value);
    partial void OnBarcodeIDChanged();
    partial void OnNumCharPosChanging(int value);
    partial void OnNumCharPosChanged();
    #endregion
		
		public tbl_infoBarcode()
		{
			this._tbl_barcode = default(EntityRef<tbl_barcode>);
			this._tbl_InformationField = default(EntityRef<tbl_InformationField>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InformationID", DbType="Int NOT NULL")]
		public int InformationID
		{
			get
			{
				return this._InformationID;
			}
			set
			{
				if ((this._InformationID != value))
				{
					if (this._tbl_InformationField.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInformationIDChanging(value);
					this.SendPropertyChanging();
					this._InformationID = value;
					this.SendPropertyChanged("InformationID");
					this.OnInformationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarcodeID", DbType="Int NOT NULL")]
		public int BarcodeID
		{
			get
			{
				return this._BarcodeID;
			}
			set
			{
				if ((this._BarcodeID != value))
				{
					if (this._tbl_barcode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBarcodeIDChanging(value);
					this.SendPropertyChanging();
					this._BarcodeID = value;
					this.SendPropertyChanged("BarcodeID");
					this.OnBarcodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumCharPos", DbType="Int NOT NULL")]
		public int NumCharPos
		{
			get
			{
				return this._NumCharPos;
			}
			set
			{
				if ((this._NumCharPos != value))
				{
					this.OnNumCharPosChanging(value);
					this.SendPropertyChanging();
					this._NumCharPos = value;
					this.SendPropertyChanged("NumCharPos");
					this.OnNumCharPosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_barcode_tbl_infoBarcode", Storage="_tbl_barcode", ThisKey="BarcodeID", OtherKey="Id", IsForeignKey=true)]
		public tbl_barcode tbl_barcode
		{
			get
			{
				return this._tbl_barcode.Entity;
			}
			set
			{
				tbl_barcode previousValue = this._tbl_barcode.Entity;
				if (((previousValue != value) 
							|| (this._tbl_barcode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_barcode.Entity = null;
						previousValue.tbl_infoBarcodes.Remove(this);
					}
					this._tbl_barcode.Entity = value;
					if ((value != null))
					{
						value.tbl_infoBarcodes.Add(this);
						this._BarcodeID = value.Id;
					}
					else
					{
						this._BarcodeID = default(int);
					}
					this.SendPropertyChanged("tbl_barcode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_InformationField_tbl_infoBarcode", Storage="_tbl_InformationField", ThisKey="InformationID", OtherKey="Id", IsForeignKey=true)]
		public tbl_InformationField tbl_InformationField
		{
			get
			{
				return this._tbl_InformationField.Entity;
			}
			set
			{
				tbl_InformationField previousValue = this._tbl_InformationField.Entity;
				if (((previousValue != value) 
							|| (this._tbl_InformationField.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_InformationField.Entity = null;
						previousValue.tbl_infoBarcodes.Remove(this);
					}
					this._tbl_InformationField.Entity = value;
					if ((value != null))
					{
						value.tbl_infoBarcodes.Add(this);
						this._InformationID = value.Id;
					}
					else
					{
						this._InformationID = default(int);
					}
					this.SendPropertyChanged("tbl_InformationField");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_InformationFields")]
	public partial class tbl_InformationField : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _InformationName;
		
		private int _MinCharPos;
		
		private EntitySet<tbl_infoBarcode> _tbl_infoBarcodes;
		
		private EntitySet<tbl_infoTextbox> _tbl_infoTextboxes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInformationNameChanging(string value);
    partial void OnInformationNameChanged();
    partial void OnMinCharPosChanging(int value);
    partial void OnMinCharPosChanged();
    #endregion
		
		public tbl_InformationField()
		{
			this._tbl_infoBarcodes = new EntitySet<tbl_infoBarcode>(new Action<tbl_infoBarcode>(this.attach_tbl_infoBarcodes), new Action<tbl_infoBarcode>(this.detach_tbl_infoBarcodes));
			this._tbl_infoTextboxes = new EntitySet<tbl_infoTextbox>(new Action<tbl_infoTextbox>(this.attach_tbl_infoTextboxes), new Action<tbl_infoTextbox>(this.detach_tbl_infoTextboxes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InformationName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InformationName
		{
			get
			{
				return this._InformationName;
			}
			set
			{
				if ((this._InformationName != value))
				{
					this.OnInformationNameChanging(value);
					this.SendPropertyChanging();
					this._InformationName = value;
					this.SendPropertyChanged("InformationName");
					this.OnInformationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinCharPos", DbType="Int NOT NULL")]
		public int MinCharPos
		{
			get
			{
				return this._MinCharPos;
			}
			set
			{
				if ((this._MinCharPos != value))
				{
					this.OnMinCharPosChanging(value);
					this.SendPropertyChanging();
					this._MinCharPos = value;
					this.SendPropertyChanged("MinCharPos");
					this.OnMinCharPosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_InformationField_tbl_infoBarcode", Storage="_tbl_infoBarcodes", ThisKey="Id", OtherKey="InformationID")]
		public EntitySet<tbl_infoBarcode> tbl_infoBarcodes
		{
			get
			{
				return this._tbl_infoBarcodes;
			}
			set
			{
				this._tbl_infoBarcodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_InformationField_tbl_infoTextbox", Storage="_tbl_infoTextboxes", ThisKey="Id", OtherKey="InformationID")]
		public EntitySet<tbl_infoTextbox> tbl_infoTextboxes
		{
			get
			{
				return this._tbl_infoTextboxes;
			}
			set
			{
				this._tbl_infoTextboxes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_infoBarcodes(tbl_infoBarcode entity)
		{
			this.SendPropertyChanging();
			entity.tbl_InformationField = this;
		}
		
		private void detach_tbl_infoBarcodes(tbl_infoBarcode entity)
		{
			this.SendPropertyChanging();
			entity.tbl_InformationField = null;
		}
		
		private void attach_tbl_infoTextboxes(tbl_infoTextbox entity)
		{
			this.SendPropertyChanging();
			entity.tbl_InformationField = this;
		}
		
		private void detach_tbl_infoTextboxes(tbl_infoTextbox entity)
		{
			this.SendPropertyChanging();
			entity.tbl_InformationField = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_infoTextbox")]
	public partial class tbl_infoTextbox : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _InformationID;
		
		private int _TextboxID;
		
		private int _NumCharPos;
		
		private EntityRef<tbl_InformationField> _tbl_InformationField;
		
		private EntityRef<tbl_textbox> _tbl_textbox;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInformationIDChanging(int value);
    partial void OnInformationIDChanged();
    partial void OnTextboxIDChanging(int value);
    partial void OnTextboxIDChanged();
    partial void OnNumCharPosChanging(int value);
    partial void OnNumCharPosChanged();
    #endregion
		
		public tbl_infoTextbox()
		{
			this._tbl_InformationField = default(EntityRef<tbl_InformationField>);
			this._tbl_textbox = default(EntityRef<tbl_textbox>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InformationID", DbType="Int NOT NULL")]
		public int InformationID
		{
			get
			{
				return this._InformationID;
			}
			set
			{
				if ((this._InformationID != value))
				{
					if (this._tbl_InformationField.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInformationIDChanging(value);
					this.SendPropertyChanging();
					this._InformationID = value;
					this.SendPropertyChanged("InformationID");
					this.OnInformationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextboxID", DbType="Int NOT NULL")]
		public int TextboxID
		{
			get
			{
				return this._TextboxID;
			}
			set
			{
				if ((this._TextboxID != value))
				{
					if (this._tbl_textbox.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTextboxIDChanging(value);
					this.SendPropertyChanging();
					this._TextboxID = value;
					this.SendPropertyChanged("TextboxID");
					this.OnTextboxIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumCharPos", DbType="Int NOT NULL")]
		public int NumCharPos
		{
			get
			{
				return this._NumCharPos;
			}
			set
			{
				if ((this._NumCharPos != value))
				{
					this.OnNumCharPosChanging(value);
					this.SendPropertyChanging();
					this._NumCharPos = value;
					this.SendPropertyChanged("NumCharPos");
					this.OnNumCharPosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_InformationField_tbl_infoTextbox", Storage="_tbl_InformationField", ThisKey="InformationID", OtherKey="Id", IsForeignKey=true)]
		public tbl_InformationField tbl_InformationField
		{
			get
			{
				return this._tbl_InformationField.Entity;
			}
			set
			{
				tbl_InformationField previousValue = this._tbl_InformationField.Entity;
				if (((previousValue != value) 
							|| (this._tbl_InformationField.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_InformationField.Entity = null;
						previousValue.tbl_infoTextboxes.Remove(this);
					}
					this._tbl_InformationField.Entity = value;
					if ((value != null))
					{
						value.tbl_infoTextboxes.Add(this);
						this._InformationID = value.Id;
					}
					else
					{
						this._InformationID = default(int);
					}
					this.SendPropertyChanged("tbl_InformationField");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_textbox_tbl_infoTextbox", Storage="_tbl_textbox", ThisKey="TextboxID", OtherKey="Id", IsForeignKey=true)]
		public tbl_textbox tbl_textbox
		{
			get
			{
				return this._tbl_textbox.Entity;
			}
			set
			{
				tbl_textbox previousValue = this._tbl_textbox.Entity;
				if (((previousValue != value) 
							|| (this._tbl_textbox.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_textbox.Entity = null;
						previousValue.tbl_infoTextboxes.Remove(this);
					}
					this._tbl_textbox.Entity = value;
					if ((value != null))
					{
						value.tbl_infoTextboxes.Add(this);
						this._TextboxID = value.Id;
					}
					else
					{
						this._TextboxID = default(int);
					}
					this.SendPropertyChanged("tbl_textbox");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_labels")]
	public partial class tbl_label : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Heigth;
		
		private int _Width;
		
		private string _Name;
		
		private EntitySet<tbl_barcode> _tbl_barcodes;
		
		private EntitySet<tbl_box> _tbl_boxes;
		
		private EntitySet<tbl_line> _tbl_lines;
		
		private EntitySet<tbl_textbox> _tbl_textboxes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnHeigthChanging(int value);
    partial void OnHeigthChanged();
    partial void OnWidthChanging(int value);
    partial void OnWidthChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public tbl_label()
		{
			this._tbl_barcodes = new EntitySet<tbl_barcode>(new Action<tbl_barcode>(this.attach_tbl_barcodes), new Action<tbl_barcode>(this.detach_tbl_barcodes));
			this._tbl_boxes = new EntitySet<tbl_box>(new Action<tbl_box>(this.attach_tbl_boxes), new Action<tbl_box>(this.detach_tbl_boxes));
			this._tbl_lines = new EntitySet<tbl_line>(new Action<tbl_line>(this.attach_tbl_lines), new Action<tbl_line>(this.detach_tbl_lines));
			this._tbl_textboxes = new EntitySet<tbl_textbox>(new Action<tbl_textbox>(this.attach_tbl_textboxes), new Action<tbl_textbox>(this.detach_tbl_textboxes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heigth", DbType="Int NOT NULL")]
		public int Heigth
		{
			get
			{
				return this._Heigth;
			}
			set
			{
				if ((this._Heigth != value))
				{
					this.OnHeigthChanging(value);
					this.SendPropertyChanging();
					this._Heigth = value;
					this.SendPropertyChanged("Heigth");
					this.OnHeigthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int NOT NULL")]
		public int Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_label_tbl_barcode", Storage="_tbl_barcodes", ThisKey="Id", OtherKey="LabelID")]
		public EntitySet<tbl_barcode> tbl_barcodes
		{
			get
			{
				return this._tbl_barcodes;
			}
			set
			{
				this._tbl_barcodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_label_tbl_box", Storage="_tbl_boxes", ThisKey="Id", OtherKey="LabelID")]
		public EntitySet<tbl_box> tbl_boxes
		{
			get
			{
				return this._tbl_boxes;
			}
			set
			{
				this._tbl_boxes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_label_tbl_line", Storage="_tbl_lines", ThisKey="Id", OtherKey="LabelID")]
		public EntitySet<tbl_line> tbl_lines
		{
			get
			{
				return this._tbl_lines;
			}
			set
			{
				this._tbl_lines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_label_tbl_textbox", Storage="_tbl_textboxes", ThisKey="Id", OtherKey="LabelID")]
		public EntitySet<tbl_textbox> tbl_textboxes
		{
			get
			{
				return this._tbl_textboxes;
			}
			set
			{
				this._tbl_textboxes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_barcodes(tbl_barcode entity)
		{
			this.SendPropertyChanging();
			entity.tbl_label = this;
		}
		
		private void detach_tbl_barcodes(tbl_barcode entity)
		{
			this.SendPropertyChanging();
			entity.tbl_label = null;
		}
		
		private void attach_tbl_boxes(tbl_box entity)
		{
			this.SendPropertyChanging();
			entity.tbl_label = this;
		}
		
		private void detach_tbl_boxes(tbl_box entity)
		{
			this.SendPropertyChanging();
			entity.tbl_label = null;
		}
		
		private void attach_tbl_lines(tbl_line entity)
		{
			this.SendPropertyChanging();
			entity.tbl_label = this;
		}
		
		private void detach_tbl_lines(tbl_line entity)
		{
			this.SendPropertyChanging();
			entity.tbl_label = null;
		}
		
		private void attach_tbl_textboxes(tbl_textbox entity)
		{
			this.SendPropertyChanging();
			entity.tbl_label = this;
		}
		
		private void detach_tbl_textboxes(tbl_textbox entity)
		{
			this.SendPropertyChanging();
			entity.tbl_label = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_lines")]
	public partial class tbl_line : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _LabelID;
		
		private int _PosX;
		
		private int _PosY;
		
		private int _Thickness;
		
		private EntityRef<tbl_label> _tbl_label;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLabelIDChanging(int value);
    partial void OnLabelIDChanged();
    partial void OnPosXChanging(int value);
    partial void OnPosXChanged();
    partial void OnPosYChanging(int value);
    partial void OnPosYChanged();
    partial void OnThicknessChanging(int value);
    partial void OnThicknessChanged();
    #endregion
		
		public tbl_line()
		{
			this._tbl_label = default(EntityRef<tbl_label>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelID", DbType="Int NOT NULL")]
		public int LabelID
		{
			get
			{
				return this._LabelID;
			}
			set
			{
				if ((this._LabelID != value))
				{
					if (this._tbl_label.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLabelIDChanging(value);
					this.SendPropertyChanging();
					this._LabelID = value;
					this.SendPropertyChanged("LabelID");
					this.OnLabelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PosX", DbType="Int NOT NULL")]
		public int PosX
		{
			get
			{
				return this._PosX;
			}
			set
			{
				if ((this._PosX != value))
				{
					this.OnPosXChanging(value);
					this.SendPropertyChanging();
					this._PosX = value;
					this.SendPropertyChanged("PosX");
					this.OnPosXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PosY", DbType="Int NOT NULL")]
		public int PosY
		{
			get
			{
				return this._PosY;
			}
			set
			{
				if ((this._PosY != value))
				{
					this.OnPosYChanging(value);
					this.SendPropertyChanging();
					this._PosY = value;
					this.SendPropertyChanged("PosY");
					this.OnPosYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thickness", DbType="Int NOT NULL")]
		public int Thickness
		{
			get
			{
				return this._Thickness;
			}
			set
			{
				if ((this._Thickness != value))
				{
					this.OnThicknessChanging(value);
					this.SendPropertyChanging();
					this._Thickness = value;
					this.SendPropertyChanged("Thickness");
					this.OnThicknessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_label_tbl_line", Storage="_tbl_label", ThisKey="LabelID", OtherKey="Id", IsForeignKey=true)]
		public tbl_label tbl_label
		{
			get
			{
				return this._tbl_label.Entity;
			}
			set
			{
				tbl_label previousValue = this._tbl_label.Entity;
				if (((previousValue != value) 
							|| (this._tbl_label.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_label.Entity = null;
						previousValue.tbl_lines.Remove(this);
					}
					this._tbl_label.Entity = value;
					if ((value != null))
					{
						value.tbl_lines.Add(this);
						this._LabelID = value.Id;
					}
					else
					{
						this._LabelID = default(int);
					}
					this.SendPropertyChanged("tbl_label");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_textboxes")]
	public partial class tbl_textbox : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _LabelID;
		
		private int _PosX;
		
		private int _PosY;
		
		private int _Height;
		
		private int _Width;
		
		private string _Fonttype;
		
		private int _Fontsize;
		
		private string _FontWeight;
		
		private EntitySet<tbl_infoTextbox> _tbl_infoTextboxes;
		
		private EntityRef<tbl_label> _tbl_label;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLabelIDChanging(int value);
    partial void OnLabelIDChanged();
    partial void OnPosXChanging(int value);
    partial void OnPosXChanged();
    partial void OnPosYChanging(int value);
    partial void OnPosYChanged();
    partial void OnHeightChanging(int value);
    partial void OnHeightChanged();
    partial void OnWidthChanging(int value);
    partial void OnWidthChanged();
    partial void OnFonttypeChanging(string value);
    partial void OnFonttypeChanged();
    partial void OnFontsizeChanging(int value);
    partial void OnFontsizeChanged();
    partial void OnFontWeightChanging(string value);
    partial void OnFontWeightChanged();
    #endregion
		
		public tbl_textbox()
		{
			this._tbl_infoTextboxes = new EntitySet<tbl_infoTextbox>(new Action<tbl_infoTextbox>(this.attach_tbl_infoTextboxes), new Action<tbl_infoTextbox>(this.detach_tbl_infoTextboxes));
			this._tbl_label = default(EntityRef<tbl_label>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelID", DbType="Int NOT NULL")]
		public int LabelID
		{
			get
			{
				return this._LabelID;
			}
			set
			{
				if ((this._LabelID != value))
				{
					if (this._tbl_label.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLabelIDChanging(value);
					this.SendPropertyChanging();
					this._LabelID = value;
					this.SendPropertyChanged("LabelID");
					this.OnLabelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PosX", DbType="Int NOT NULL")]
		public int PosX
		{
			get
			{
				return this._PosX;
			}
			set
			{
				if ((this._PosX != value))
				{
					this.OnPosXChanging(value);
					this.SendPropertyChanging();
					this._PosX = value;
					this.SendPropertyChanged("PosX");
					this.OnPosXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PosY", DbType="Int NOT NULL")]
		public int PosY
		{
			get
			{
				return this._PosY;
			}
			set
			{
				if ((this._PosY != value))
				{
					this.OnPosYChanging(value);
					this.SendPropertyChanging();
					this._PosY = value;
					this.SendPropertyChanged("PosY");
					this.OnPosYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int NOT NULL")]
		public int Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int NOT NULL")]
		public int Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fonttype", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Fonttype
		{
			get
			{
				return this._Fonttype;
			}
			set
			{
				if ((this._Fonttype != value))
				{
					this.OnFonttypeChanging(value);
					this.SendPropertyChanging();
					this._Fonttype = value;
					this.SendPropertyChanged("Fonttype");
					this.OnFonttypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fontsize", DbType="Int NOT NULL")]
		public int Fontsize
		{
			get
			{
				return this._Fontsize;
			}
			set
			{
				if ((this._Fontsize != value))
				{
					this.OnFontsizeChanging(value);
					this.SendPropertyChanging();
					this._Fontsize = value;
					this.SendPropertyChanged("Fontsize");
					this.OnFontsizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FontWeight", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FontWeight
		{
			get
			{
				return this._FontWeight;
			}
			set
			{
				if ((this._FontWeight != value))
				{
					this.OnFontWeightChanging(value);
					this.SendPropertyChanging();
					this._FontWeight = value;
					this.SendPropertyChanged("FontWeight");
					this.OnFontWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_textbox_tbl_infoTextbox", Storage="_tbl_infoTextboxes", ThisKey="Id", OtherKey="TextboxID")]
		public EntitySet<tbl_infoTextbox> tbl_infoTextboxes
		{
			get
			{
				return this._tbl_infoTextboxes;
			}
			set
			{
				this._tbl_infoTextboxes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_label_tbl_textbox", Storage="_tbl_label", ThisKey="LabelID", OtherKey="Id", IsForeignKey=true)]
		public tbl_label tbl_label
		{
			get
			{
				return this._tbl_label.Entity;
			}
			set
			{
				tbl_label previousValue = this._tbl_label.Entity;
				if (((previousValue != value) 
							|| (this._tbl_label.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_label.Entity = null;
						previousValue.tbl_textboxes.Remove(this);
					}
					this._tbl_label.Entity = value;
					if ((value != null))
					{
						value.tbl_textboxes.Add(this);
						this._LabelID = value.Id;
					}
					else
					{
						this._LabelID = default(int);
					}
					this.SendPropertyChanged("tbl_label");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_infoTextboxes(tbl_infoTextbox entity)
		{
			this.SendPropertyChanging();
			entity.tbl_textbox = this;
		}
		
		private void detach_tbl_infoTextboxes(tbl_infoTextbox entity)
		{
			this.SendPropertyChanging();
			entity.tbl_textbox = null;
		}
	}
}
#pragma warning restore 1591
